                                                                                                                                                                              
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class regcustomer extends javax.swing.JInternalFrame {

    /**
     * Creates new form regcustomer
     */
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null; 
    
     public regcustomer() {
        super("Add Customer");
        initComponents();
        conn = databaseConnection.connection();
        jTable1.getTableHeader().setDefaultRenderer(new HeaderColor());
               
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);

        
        
        try{
           stmt = conn.createStatement();
           String sql = "SELECT * FROM customer";
           ResultSet res = stmt.executeQuery(sql);
          while(res.next()){
              DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
               dtm.addRow(new Object[]{res.getString("NIC"),res.getString("CName"),res.getString("CPhone"),res.getString("Address"),res.getString("Age"),res.getString("Pregnant"),res.getString("Allergies"),res.getString("ChronicIllness")});   
          }
           
           
        }catch(Exception e){ 
            JOptionPane.showMessageDialog(null, e);
            
        }
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.setGridColor(Color.gray);
        
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        cname = new javax.swing.JTextField();
        cphone = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        allergies = new javax.swing.JTextField();
        illness = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        sbmt = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pregnant = new javax.swing.JComboBox<>();
        alert = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1500, 900));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Customer NIC");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setText("Phone Number");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel6.setText("Pregnant");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel7.setText("Allergies");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel8.setText("Chronic Illness");

        cnic.setBackground(new java.awt.Color(230, 231, 232));
        cnic.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cnic.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnicActionPerformed(evt);
            }
        });
        cnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnicKeyPressed(evt);
            }
        });

        cname.setBackground(new java.awt.Color(230, 231, 232));
        cname.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cname.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnameKeyPressed(evt);
            }
        });

        cphone.setBackground(new java.awt.Color(230, 231, 232));
        cphone.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cphone.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cphoneActionPerformed(evt);
            }
        });
        cphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cphoneKeyPressed(evt);
            }
        });

        address.setBackground(new java.awt.Color(230, 231, 232));
        address.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        address.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressKeyPressed(evt);
            }
        });

        age.setBackground(new java.awt.Color(230, 231, 232));
        age.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        age.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageKeyPressed(evt);
            }
        });

        allergies.setBackground(new java.awt.Color(230, 231, 232));
        allergies.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        allergies.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        allergies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allergiesKeyPressed(evt);
            }
        });

        illness.setBackground(new java.awt.Color(230, 231, 232));
        illness.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        illness.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        illness.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                illnessKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N

        sbmt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/submitebtn.png"))); // NOI18N
        sbmt.setContentAreaFilled(false);
        sbmt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sbmt.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/submitblue.png"))); // NOI18N
        sbmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbmtActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/registercustomer (2).png"))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "CName", "CPhone", "Address", "Age", "Pregnant", "Allergies", "ChronicIllness"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        pregnant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));
        pregnant.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pregnant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pregnant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pregnantKeyPressed(evt);
            }
        });

        alert.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        alert.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pregnant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allergies)
                            .addComponent(illness, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(cname)
                            .addComponent(cnic)
                            .addComponent(cphone, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(address, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(sbmt)
                            .addComponent(alert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cphone, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(pregnant, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel7)
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(allergies, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(illness, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addComponent(sbmt))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cphoneActionPerformed

    private void cnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnicActionPerformed

    private void sbmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbmtActionPerformed
        // TODO add your handling code here:
             try{
             int count = 0;    
                 
             stmt = conn.createStatement();
             String NIC = cnic.getText();
             String Pregnant = (String) pregnant.getSelectedItem();
             String CName = cname.getText();
             String CPhone = cphone.getText();
             String Address = address.getText();
             String Age = age.getText();
             String Allergies = allergies.getText();
             String ChronicIllness = illness.getText();
             
            String sql1 = "SELECT NIC FROM customer WHERE NIC= '"+cnic.getText()+"'";
            rs = stmt.executeQuery(sql1);
            while(rs.next()){
                  count++;
              }
              if(count==1){
              JOptionPane.showMessageDialog(null, "Already Exists a Customer from this NIC!"); 
           
               
              }else{
           
             if (NIC.hashCode() == 0 || CName.hashCode() == 0 || CPhone.hashCode() == 0 || Address.hashCode() == 0 || Age.hashCode() == 0 || Pregnant.hashCode() == 0 || Allergies.hashCode() == 0 || ChronicIllness.hashCode() == 0)
              {
                  JOptionPane.showMessageDialog(null, "Some fields are empty!");
              }
              else
              {
      
            String sql = " INSERT INTO CUSTOMER(NIC, CName, CPhone, Address, Age, Pregnant, Allergies, ChronicIllness ) VALUES('"+NIC+"', '"+CName+"', '"+CPhone+"', '"+Address+"', '"+Age+"', '"+Pregnant+"', '"+Allergies+"', '"+ChronicIllness+"')";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null,"Data is successfully inserted");
              
        
             
           stmt = conn.createStatement();
           String sql2 = "SELECT * FROM customer";
           ResultSet res = stmt.executeQuery(sql2);
           jTable1.setModel(DbUtils.resultSetToTableModel(res));
          
           
             
           cnic.setText(null);
           pregnant.setSelectedItem(null);
           cname.setText(null);
           cphone.setText(null);
           address.setText(null);
           age.setText(null);
           allergies.setText(null);
           illness.setText(null);
              }
              }  
             
         }catch(HeadlessException | NumberFormatException | SQLException e){
             JOptionPane.showMessageDialog(null, e);
         }
             
    }//GEN-LAST:event_sbmtActionPerformed

    private void cphoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cphoneKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:cname.requestFocus();
                break;
           case 40:address.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            address.requestFocus();
        }
        try {
            int i = Integer.parseInt(cphone.getText());
            alert.setText("");
        } catch (NumberFormatException e) {
            alert.setText("Invalid Number");
        }
    }//GEN-LAST:event_cphoneKeyPressed

    private void cnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnicKeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
           case 38:illness.requestFocus();
                break;
           case 40:cname.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            cname.requestFocus();
        }
    }//GEN-LAST:event_cnicKeyPressed

    private void cnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnameKeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
           case 38:cnic.requestFocus();
                break;
           case 40:cphone.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            cphone.requestFocus();
        }
    }//GEN-LAST:event_cnameKeyPressed

    private void addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:cphone.requestFocus();
                break;
           case 40:age.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            age.requestFocus();
        }
    }//GEN-LAST:event_addressKeyPressed

    private void ageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:address.requestFocus();
                break;
           case 40:pregnant.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            pregnant.requestFocus();
        }
    }//GEN-LAST:event_ageKeyPressed

    private void pregnantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregnantKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:age.requestFocus();
                break;
           case 40:allergies.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            allergies.requestFocus();
        }
    }//GEN-LAST:event_pregnantKeyPressed

    private void allergiesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_allergiesKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:pregnant.requestFocus();
                break;
           case 40:illness.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            illness.requestFocus();
        }
    }//GEN-LAST:event_allergiesKeyPressed

    private void illnessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_illnessKeyPressed
        // TODO add your handling code here:
            switch(evt.getKeyCode())
        {
           case 38:allergies.requestFocus();
                break;
           case 40:cnic.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            cnic.requestFocus();
        }
    }//GEN-LAST:event_illnessKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JLabel alert;
    private javax.swing.JTextField allergies;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cnic;
    private javax.swing.JTextField cphone;
    private javax.swing.JTextField illness;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> pregnant;
    private javax.swing.JButton sbmt;
    // End of variables declaration//GEN-END:variables

static public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int colomn) {

            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, colomn);
            setBackground(new Color(102,0,102));
            setForeground(Color.white);
            setFont(new Font("Century Gothic",Font.BOLD,15));

            TableCellRenderer rendererFromHeader = jTable1.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.LEFT);
            return this;
        }
}
            public boolean searching(){


                   String m = "";
                    boolean chk = false;
                    try {
                    String sql = "SELECT NIC FROM admin WHERE  NIC= "+cnic.getText()+"";
                    ResultSet rs = stmt.executeQuery(sql);
                        while (rs.next()){ 

                            m = rs.getString(1);
                            System.out.println(m);

                        }

                } catch (Exception e) {
                        System.out.println(e);
                }
                    if (m.equalsIgnoreCase(cnic.getText())) {
                        chk = true;

                }

            return chk;

            }


    }



