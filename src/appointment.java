
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class appointment extends javax.swing.JInternalFrame {

    /**
     * Creates new form appointment
     * 
     */
    
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null; 
    
    
     public appointment() {
        super("Add Appointment");
        initComponents();
        conn = databaseConnection.connection();
        jTable1.getTableHeader().setDefaultRenderer(new regcustomer.HeaderColor());
        jTable2.getTableHeader().setDefaultRenderer(new regcustomer.HeaderColor());
               
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        


         try {
             
         stmt = conn.createStatement();
         String sql = ("SELECT COUNT(AID) FROM appointment");
         ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
              String n = (rs.getString("COUNT(AID)"));
              int N = Integer.parseInt(n);
                if(N==0){
                        String No = String.format("%03d", 1);
                        aid.setText("A" + No);
                        System.out.println(No);
                }else{
                   stmt = conn.createStatement();
                   String sql1 = ("SELECT * FROM appointment ORDER BY AID DESC LIMIT 1");
                   ResultSet rs1 = stmt.executeQuery(sql1);
                   if (rs1.next()) {
                   String ApID = (rs1.getString("AppointmentID"));   
                   String apid = ApID.replaceAll("[^0-9]+", ""); 
                   
                    int A = Integer.parseInt(apid);
                   A = A+1;
                   String No = String.format("%03d", A);
                   aid.setText("A" + No);
                  
                   }
     
                 }
        
            }
             
         } catch (Exception e) {
         }


        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.setGridColor(Color.gray);
        
        getServices();
        
     }
        
                 
     public void getServices() {
         
         try {
                stmt = conn.createStatement();
                String sql = ("SELECT * FROM service");
                ResultSet rs = stmt.executeQuery(sql);
                   while (rs.next()) {
                     String serid = (rs.getString("ServiceID"));
                     String sname = (rs.getString("SName"));
                     
                     
                       sid.addItem(""+serid);
                       snameComboBox.addItem(""+sname);
                     
                   }
         } catch (Exception e) {
         }
     
     }
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        aid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jDate1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        snameComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        sid = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        session = new javax.swing.JSpinner();
        alert = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1500, 900));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appointment (2).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setText("Customer NIC");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setText("Appointment ID");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel4.setText("Service ID");

        cnic.setBackground(new java.awt.Color(230, 231, 232));
        cnic.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cnic.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnicKeyPressed(evt);
            }
        });

        aid.setBackground(new java.awt.Color(230, 231, 232));
        aid.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        aid.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        aid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                aidKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel7.setText("Date");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel8.setText("Time");

        time.setBackground(new java.awt.Color(230, 231, 232));
        time.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        time.setToolTipText("Select the Time you want ");
        time.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });
        time.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timeKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "AppointmentID", "ServiceID", "Date", "Time", "Session"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "AppointmentID", "ServiceID", "Date", "Time", "Session"
            }
        ));
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jDate1.setToolTipText("Select the Date you want ");
        jDate1.setDateFormatString("MM,dd,yyyy");
        jDate1.setFocusCycleRoot(true);
        jDate1.setFocusable(false);
        jDate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDate1KeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addbtn.png"))); // NOI18N
        jButton1.setToolTipText("Click to Add Appointments");
        jButton1.setContentAreaFilled(false);
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/addpur.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editbtn.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/editepur.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/submitebtn.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/submit.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deletebtn.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/deletepur.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchapppur.png"))); // NOI18N
        jButton6.setToolTipText("Click to Search Appointments");
        jButton6.setContentAreaFilled(false);
        jButton6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/searchbtnapp.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        snameComboBox.setToolTipText("Select the Service Name you want ");
        snameComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                snameComboBoxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                snameComboBoxMousePressed(evt);
            }
        });
        snameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snameComboBoxActionPerformed(evt);
            }
        });
        snameComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                snameComboBoxKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setText("SName");

        sid.setToolTipText("Select the Service ID you want ");
        sid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidItemStateChanged(evt);
            }
        });
        sid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sidMouseClicked(evt);
            }
        });
        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });
        sid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sidKeyPressed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/showappointment.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addappointment.png"))); // NOI18N

        session.setModel(new javax.swing.SpinnerListModel(new String[] {"--", "AM", "PM"}));
        session.setToolTipText("Select the Session you want ");
        session.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sessionMouseClicked(evt);
            }
        });
        session.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sessionKeyPressed(evt);
            }
        });

        alert.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        alert.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 983, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 675, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(219, 219, 219))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addComponent(jLabel3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(jLabel2)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(aid, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(286, 286, 286)
                                .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(snameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(session, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton3)
                                    .addGap(31, 31, 31)
                                    .addComponent(jButton4)
                                    .addGap(88, 88, 88))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addGap(2, 2, 2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(aid, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(63, 63, 63)))
                        .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(snameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(session, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(79, 79, 79))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            try{
             stmt = conn.createStatement();
             String NIC = cnic.getText();
             String AppointmentID = aid.getText();
             String ServiceID = (String) sid.getSelectedItem();
             String Time = time.getText();
             String Session = session.getValue().toString();
             
        
             
             SimpleDateFormat sdf = new SimpleDateFormat("MM,dd,yyyy");
             String Date = sdf.format(jDate1.getDate());
            
                    
            String sql1 = "SELECT Time FROM appointment WHERE Time= '"+time.getText()+"'";
            rs = stmt.executeQuery(sql1);
                int count = 0;
            while(rs.next()){
                  count++;
              }
              if(count==1){
              JOptionPane.showMessageDialog(null, "Already Exists this time!"); 
           
               
              }else{
                  
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.addRow(new Object[]{NIC, AppointmentID, ServiceID, Date, Time, Session});
     

              stmt = conn.createStatement();
              String sql = "SELECT * FROM service WHERE ServiceID = '"+ ServiceID +"' ";
              ResultSet rs = stmt.executeQuery(sql);
              }
              
              
       
         }catch(HeadlessException | NumberFormatException | SQLException e){
             JOptionPane.showMessageDialog(null, e);        
          
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      try{
        
       DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
       int selectedRowIndex = jTable2.getSelectedRow();
        
       stmt = conn.createStatement();
       

        String NIC = dtm.getValueAt(selectedRowIndex, 0).toString();
        String AppointmentID = dtm.getValueAt(selectedRowIndex, 1).toString();
        String ServiceID = dtm.getValueAt(selectedRowIndex, 2).toString();
        String Date = dtm.getValueAt(selectedRowIndex, 3).toString();
        String Time = dtm.getValueAt(selectedRowIndex, 4).toString();
        String Session = dtm.getValueAt(selectedRowIndex, 5).toString();
                              
              
//        String NewNIC = JOptionPane.showInputDialog(null,"Enter the new NIC", NIC);
//        String NewAppointmentID = JOptionPane.showInputDialog(null,"Enter the new AppointmentID", AppointmentID);
        String NewServiceID = JOptionPane.showInputDialog(null,"Enter the new Service ID", ServiceID);
        String NewDate = JOptionPane.showInputDialog(null,"Enter the new Date", Date);
        String NewTime = JOptionPane.showInputDialog(null,"Enter the new Time", Time);
        String NewSession = JOptionPane.showInputDialog(null,"Enter the new Session", Session);
        
        String sql = "UPDATE appointment SET ServiceID='"+NewServiceID+"', Date='"+NewDate+"', Time='"+NewTime+"', Session='"+NewSession+"' WHERE AppointmentID='"+AppointmentID+"' AND NIC='"+NIC+"' ";
        stmt.executeUpdate(sql);
        
        dtm.setValueAt(NIC, selectedRowIndex, 0);
        dtm.setValueAt(AppointmentID, selectedRowIndex, 1);
        dtm.setValueAt(NewServiceID, selectedRowIndex, 2);
        dtm.setValueAt(NewDate, selectedRowIndex, 3);
        dtm.setValueAt(NewTime, selectedRowIndex, 4);
        dtm.setValueAt(NewSession, selectedRowIndex, 5);
        
        JOptionPane.showMessageDialog(null,"Data is successfully updated");
                 
     
                  
            }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            
    
            stmt = conn.createStatement();
            for (int i=0; i < jTable1.getRowCount(); i++) {
                

                
                String sql = ("INSERT INTO appointment(NIC, AppointmentID, ServiceID, Date, Time, Session) VALUES('"+jTable1.getValueAt(i,0).toString()+"', '"+jTable1.getValueAt(i,1).toString()+"', '"+jTable1.getValueAt(i,2).toString()+"', '"+jTable1.getValueAt(i,3).toString()+"', '"+jTable1.getValueAt(i,4).toString()+"', '"+jTable1.getValueAt(i,5).toString()+"')");
                stmt.executeUpdate(sql);
                
                cnic.setText(null);
                aid.setText(null);
                sid.setSelectedItem(null);
                jDate1.setDate(null);
                time.setText(null);
//                session.setValue(null);
                
              
                
            }
            
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             model.setRowCount(0);
                
        } catch (SQLException ex) {
            Logger.getLogger(appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
             
         stmt = conn.createStatement();
         String sql = ("SELECT COUNT(AID) FROM appointment");
         ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
              String n = (rs.getString("COUNT(AID)"));
              int N = Integer.parseInt(n);
                if(N==0){
                        String No = String.format("%03d", 1);
                        aid.setText("A" + No);
                        System.out.println(No);
                }else{
                   stmt = conn.createStatement();
                   String sql1 = ("SELECT * FROM appointment ORDER BY AID DESC LIMIT 1");
                   ResultSet rs1 = stmt.executeQuery(sql1);
                   if (rs1.next()) {
                   String ApID = (rs1.getString("AppointmentID"));   
                   String apid = ApID.replaceAll("[^0-9]+", ""); 
                   
                    int A = Integer.parseInt(apid);
                   A = A+1;
                   String No = String.format("%03d", A);
                   aid.setText("A" + No);
                  
                   }
     
                 }
        
            }
             
         } catch (Exception e) {
         }
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete?", "Delete",JOptionPane.YES_NO_OPTION);
        if(opt==0){
        
          try{
             
           int columnAId = 1;
           int columnTime = 4;
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            int row = jTable2.getSelectedRow();
            String value1 = jTable2.getModel().getValueAt(row, columnAId).toString();
            String value2 = jTable2.getModel().getValueAt(row, columnTime).toString();
             
           stmt = conn.createStatement();
           

           String sql= "DELETE FROM appointment WHERE  AppointmentID = '"+value1+"' AND  Time = '"+value2+"'";
           stmt.executeUpdate(sql);
           JOptionPane.showMessageDialog(null,"Data is successfully Deleted");
           

            dtm.removeRow(row);
             
        }catch (NumberFormatException | SQLException e){JOptionPane.showMessageDialog(null, e); 
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel predat=(DefaultTableModel)jTable2.getModel();
        int rows=predat.getRowCount();
        for(int i=rows-1;i>=0;i--){
            predat.removeRow(i);
        }
        try{
               
            
            if (!cnic.getText().equals("")){
            
            String NIC = cnic.getText();
            String sql = "SELECT * FROM appointment WHERE NIC ='"+NIC+"'";

            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {

                DefaultTableModel dtm = (DefaultTableModel)jTable2.getModel();
                dtm.addRow(new Object[]{rs.getString("NIC"),rs.getString("AppointmentID"), rs.getString("ServiceID"),rs.getString("Date"),rs.getString("Time"),rs.getString("Session")});
                }
                }
           
           
            else if(!session.getValue().equals("--") && !jDate1.getDate().equals("")){
                
                Date Date = jDate1.getDate();
             
            String ss = session.getValue().toString(); 
      
            DateFormat ft1 = new SimpleDateFormat("MM,dd,yyyy");
            
            String sql = "SELECT * FROM appointment WHERE Date ='"+ft1.format(Date)+"' AND Session = '"+ss+"' ";
            
            ResultSet rs = stmt.executeQuery(sql);
               
            while (rs.next()) {
                
                DefaultTableModel dtm = (DefaultTableModel)jTable2.getModel();
                dtm.addRow(new Object[]{rs.getString("NIC"),rs.getString("AppointmentID") ,rs.getString("ServiceID"),rs.getString("Date"),rs.getString("Time"),rs.getString("Session")});                 
            }
            }
            
             else if(!jDate1.getDate().equals("")){
               
            stmt = conn.createStatement();
            Date Date = jDate1.getDate();
             
           
      
            DateFormat ft1 = new SimpleDateFormat("MM,dd,yyyy");
            
            String sql = "SELECT * FROM appointment WHERE Date ='"+ft1.format(Date)+"' ";
            
            ResultSet rs = stmt.executeQuery(sql);
               
            while (rs.next()) {
                
                DefaultTableModel dtm = (DefaultTableModel)jTable2.getModel();
                dtm.addRow(new Object[]{rs.getString("NIC"),rs.getString("AppointmentID") ,rs.getString("ServiceID"),rs.getString("Date"),rs.getString("Time"),rs.getString("Session")});                 
            }
            
            }
            
                
            }catch (HeadlessException | NumberFormatException | SQLException e){JOptionPane.showMessageDialog(null, e); 
                    JOptionPane.showMessageDialog(null, e);
        
            
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
       
        
        
    }//GEN-LAST:event_sidActionPerformed

    private void sidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sidMouseClicked
        
         String selectedid = sid.getSelectedItem().toString();      
        try {
            
            String sql = "SELECT * FROM service WHERE ServiceID ='"+selectedid+"'";

            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                 snameComboBox.setSelectedItem(""+rs.getString("SName"));
            }
            
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_sidMouseClicked

    private void sidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sidItemStateChanged
        
        
    }//GEN-LAST:event_sidItemStateChanged

    private void snameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snameComboBoxActionPerformed
        
        
        
    }//GEN-LAST:event_snameComboBoxActionPerformed

    private void snameComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snameComboBoxMousePressed

    }//GEN-LAST:event_snameComboBoxMousePressed

    private void snameComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snameComboBoxMouseClicked
        String selectedname = snameComboBox.getSelectedItem().toString();
        
        try {
            
            String sql = "SELECT * FROM service WHERE SName ='"+selectedname+"'";

            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                 sid.setSelectedItem(""+rs.getString("ServiceID"));
            }
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_snameComboBoxMouseClicked

    private void sidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sidKeyPressed
        // TODO add your handling code here:
           int key=evt.getKeyCode();
            if(key==10){
            jDate1.requestFocus();
        }
    }//GEN-LAST:event_sidKeyPressed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    private void sessionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sessionMouseClicked

    private void cnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnicKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:session.requestFocus();
                break;
           case 40:aid.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            aid.requestFocus();
        }
    }//GEN-LAST:event_cnicKeyPressed

    private void aidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aidKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:cnic.requestFocus();
                break;
           case 40:aid.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            aid.requestFocus();
        }
    }//GEN-LAST:event_aidKeyPressed

    private void snameComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snameComboBoxKeyPressed
        // TODO add your handling code here:
           int key=evt.getKeyCode();
            if(key==10){
            sid.requestFocus();
        }
    }//GEN-LAST:event_snameComboBoxKeyPressed

    private void jDate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDate1KeyPressed
        // TODO add your handling code here:
           int key=evt.getKeyCode();
            if(key==10){
            time.requestFocus();
        }
    }//GEN-LAST:event_jDate1KeyPressed

    private void timeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeKeyPressed
        // TODO add your handling code here:
           int key=evt.getKeyCode();
            if(key==10){
            session.requestFocus();
        }
    }//GEN-LAST:event_timeKeyPressed

    private void sessionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sessionKeyPressed
        // TODO add your handling code here:
           int key=evt.getKeyCode();
            if(key==10){
            cnic.requestFocus();
        }
    }//GEN-LAST:event_sessionKeyPressed


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aid;
    private javax.swing.JLabel alert;
    private javax.swing.JTextField cnic;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JSpinner session;
    private javax.swing.JComboBox<String> sid;
    private javax.swing.JComboBox<String> snameComboBox;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables

    
    static public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int colomn) {

            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, colomn);
            setBackground(new Color(102,0,102));
            setForeground(Color.white);
            setFont(new Font("Century Gothic",Font.BOLD,15));

            TableCellRenderer rendererFromHeader = jTable1.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.LEFT);
            return this;
        }
}

}

