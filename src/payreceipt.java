
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class payreceipt extends javax.swing.JInternalFrame {

    /**
     * Creates new form payreceipt
     */
    
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    ResultSet rs2 = null;
    
    public payreceipt() {
        super("Add Receipt");
        initComponents();
        conn = databaseConnection.connection();
        jTable1.getTableHeader().setDefaultRenderer(new regcustomer.HeaderColor());
        
         this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        
        
        
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.setGridColor(Color.gray);
        
            
        
        
       try {
            int count = 0;
          
           
              stmt = conn.createStatement();
              
              String sql1 = "SELECT * FROM invoice";
              ResultSet rs1 = stmt.executeQuery(sql1);
              
              while(rs1.next()){
                  count++;
              }
              if(count==0){
               int no = 1;
               String NO =  String.format("%05d", no);
               ino.setText("I"+NO);
               
               }else{
                  
                  String sql = "SELECT MAX(IID) FROM invoice";
                  ResultSet rs = stmt.executeQuery(sql);
        
            if(rs.next()){
               
               String IID = (rs.getString("MAX(IID)"));
               int SV = Integer.parseInt(IID);
               SV=SV+1;
               String NO =  String.format("%05d", SV);
               ino.setText("I"+NO);
               }
               
            }
                  
              
         } catch (Exception e) {
         
         }
        
         Calendar cal=new GregorianCalendar();
          int month=cal.get(Calendar.MONTH);
          int year=cal.get(Calendar.YEAR);
          int day=cal.get(Calendar.DAY_OF_MONTH);
          
          date.setText((month+1)+"/"+day+"/"+year);
          
          txtDiscount.setText("0");
        
    }

    
    public void getSum() {
    
       
        double sum = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            sum = sum + Double.parseDouble(jTable1.getValueAt(i, 3).toString());

        }
   
        txtTotal.setText("" + sum);     
        
        
            Double Tt = Double.parseDouble(txtTotal.getText());
            Double Dd = Double.parseDouble(txtDiscount.getText());
            Double NT = Tt - ((Tt * Dd)/100);
            DecimalFormat df = new DecimalFormat("0.00");
            txtNetTotal.setText(df.format(NT));
            
         
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        ino = new javax.swing.JTextField();
        cname = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        sname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        sid = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtDiscount = new javax.swing.JTextField();
        txtPayment = new javax.swing.JTextField();
        txtNetTotal = new javax.swing.JTextField();
        txtBalance = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        print = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1500, 900));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paymentreceipt.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setText("Bill Info");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Date");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Invoice No");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Customer NIC");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Customer Name");

        cnic.setBackground(new java.awt.Color(230, 231, 232));
        cnic.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cnic.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnicActionPerformed(evt);
            }
        });
        cnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnicKeyPressed(evt);
            }
        });

        ino.setBackground(new java.awt.Color(230, 231, 232));
        ino.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ino.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inoActionPerformed(evt);
            }
        });
        ino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inoKeyPressed(evt);
            }
        });

        cname.setBackground(new java.awt.Color(230, 231, 232));
        cname.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        cname.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });
        cname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnameKeyPressed(evt);
            }
        });

        date.setBackground(new java.awt.Color(230, 231, 232));
        date.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        date.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel7.setText("Service Details");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Service ID");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Service Name");

        sname.setBackground(new java.awt.Color(230, 231, 232));
        sname.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        sname.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        sname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snameActionPerformed(evt);
            }
        });
        sname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                snameKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Unit Price");

        price.setBackground(new java.awt.Color(230, 231, 232));
        price.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        price.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "ServiceID", "Service Name", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        sid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S001", "S002", "S003", "S004", "S005", "S006", "S007", "S008", "S009", "S010", "S011", "S012", "S013", "S014", "S015", "S016", "S017", "S018" }));
        sid.setToolTipText("Select the Service ID you want ");
        sid.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });
        sid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sidKeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchbtn.png"))); // NOI18N
        jButton1.setToolTipText("Click to Search the Service Details");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setContentAreaFilled(false);
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/searchpur1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cartbtn.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/cartpur.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/removebtn.png"))); // NOI18N
        jButton3.setToolTipText("Click to Remove Unwanted Services");
        jButton3.setContentAreaFilled(false);
        jButton3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/removepur.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ino, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel6)
                                        .addGap(32, 32, 32))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel8))
                                        .addGap(52, 52, 52)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(sname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(69, 69, 69)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(943, 943, 943))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1025, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 57, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(ino, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(jButton1)))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(246, 187, 255));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel12.setText("Total");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel16.setText("Discount");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel17.setText("Cash");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel18.setText("Net Total");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel19.setText("Balance");

        txtTotal.setBackground(new java.awt.Color(230, 231, 232));
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        txtDiscount.setBackground(new java.awt.Color(230, 231, 232));
        txtDiscount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtDiscount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscountKeyReleased(evt);
            }
        });

        txtPayment.setBackground(new java.awt.Color(230, 231, 232));
        txtPayment.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtPayment.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtPayment.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPaymentFocusGained(evt);
            }
        });
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaymentKeyReleased(evt);
            }
        });

        txtNetTotal.setBackground(new java.awt.Color(230, 231, 232));
        txtNetTotal.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtNetTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtBalance.setBackground(new java.awt.Color(230, 231, 232));
        txtBalance.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtBalance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel21.setText("%");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/printbtn.png"))); // NOI18N
        print.setToolTipText("Click to Print Receipt");
        print.setContentAreaFilled(false);
        print.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/printpur.png"))); // NOI18N
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21))
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(print)
                .addGap(91, 91, 91))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(print)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inoActionPerformed

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnameActionPerformed

    private void snameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snameActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
        // TODO add your handling code here:
             try{
    
              
              stmt = conn.createStatement();
              String sql = "SELECT SName, Price FROM Service WHERE ServiceID ='"+sid.getSelectedItem().toString()+"'";
              ResultSet rs = stmt.executeQuery(sql);
              
              while(rs.next()) {
                
               sname.setText(rs.getString("SName"));
               price.setText(rs.getString("Price"));
              
              }
       
         }catch(HeadlessException | NumberFormatException | SQLException e){
             JOptionPane.showMessageDialog(null, e);        
          
         }
        
    }//GEN-LAST:event_sidActionPerformed

    private void txtPaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyReleased
        // TODO add your handling code here:
           try{
            
            Double NT = Double.parseDouble(txtNetTotal.getText());
            Double PM = Double.parseDouble(txtPayment.getText());
            Double BL = PM  - NT;
            DecimalFormat df = new DecimalFormat("0.00");
            txtBalance.setText(df.format(BL));
            
            
        }catch(Exception e){
        
        }
        
    }//GEN-LAST:event_txtPaymentKeyReleased

    private void txtDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyReleased
        // TODO add your handling code here:
        try{
            
            Double Tt = Double.parseDouble(txtTotal.getText());
            Double Dd = Double.parseDouble(txtDiscount.getText());
            Double NT = Tt - ((Tt * Dd)/100);
            DecimalFormat df = new DecimalFormat("0.00");
            txtNetTotal.setText(df.format(NT));
            
            
        }catch(Exception e){
        
        }
    }//GEN-LAST:event_txtDiscountKeyReleased

    private void txtPaymentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaymentFocusGained
        
        try {
            Double Dd = Double.parseDouble(txtDiscount.getText());
            Double Tt = Double.parseDouble(txtTotal.getText());
            
            if(Dd == 0){
                 txtNetTotal.setText(""+Tt);
            }
            
        } catch (Exception e) {
        }
        
        
    }//GEN-LAST:event_txtPaymentFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{

            String NIC = cnic.getText();
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM,dd,yyyy");
            LocalDateTime now = LocalDateTime.now();
            

            String sql = "SELECT * FROM appointment INNER JOIN service ON appointment.ServiceID = service.ServiceID WHERE appointment.NIC ='"+NIC+"' AND appointment.Date = '"+dtf.format(now)+"'";  
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()) {
                
                    DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
                    dtm.addRow(new Object[]{rs.getString("NIC"),rs.getString("ServiceID"),rs.getString("SName"),rs.getString("Price")});    
                    
                   
                
            }
            
     
    
              stmt = conn.createStatement();
              String cst = "SELECT CName FROM customer WHERE NIC ='"+NIC+"'";
              ResultSet res = stmt.executeQuery(cst);
              
              while(res.next()) {
                
               cname.setText(res.getString("CName"));
              
              
              }
       
         
            
            int count = 0;
            
            String sql2 = "SELECT * FROM invoice WHERE NIC = '"+NIC+"'";  
            ResultSet rs2 = stmt.executeQuery(sql2);
            
            while(rs2.next()) {
                
                   count++; 
               
            }
       
           if(count > 3){
               
               txtDiscount.setText("15");
               
           }
           
            getSum();
            
        }catch (HeadlessException | NumberFormatException e){JOptionPane.showMessageDialog(null, e); 
                    JOptionPane.showMessageDialog(null, e);
        
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try{
             stmt = conn.createStatement();
             String NIC = cnic.getText();
             String ServiceID = (String) sid.getSelectedItem();
             String ServiceName = sname.getText();
             String UnitPrice = price.getText();
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM,dd,yyyy");
            LocalDateTime now = LocalDateTime.now();
           
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.addRow(new Object[]{NIC, ServiceID, ServiceName, UnitPrice });

              stmt = conn.createStatement();
              String sql = "SELECT * FROM appointment INNER JOIN service ON appointment.ServiceID = service.ServiceID WHERE appointment.NIC ='"+NIC+"' AND appointment.Date = '"+dtf.format(now)+"'";  
              ResultSet rs = stmt.executeQuery(sql);
              
             getSum();
              
       
         }catch(HeadlessException | NumberFormatException | SQLException e){
             JOptionPane.showMessageDialog(null, e);        
          
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Remove?", "Delete",JOptionPane.YES_NO_OPTION);
        if(opt==0){
        
         try{
             
            int columnNIC = 1;
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int row = jTable1.getSelectedRow();
            String value1 = jTable1.getModel().getValueAt(row, columnNIC).toString();
             
           stmt = conn.createStatement();

           String sql= "DELETE FROM invoice WHERE  NIC = '"+value1+"'";
           stmt.executeUpdate(sql);
           JOptionPane.showMessageDialog(null,"Data is successfully Removed");
           

            dtm.removeRow(row);
            getSum();
             
        }catch (NumberFormatException | SQLException e){JOptionPane.showMessageDialog(null, e); 
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
//         try {
            // TODO add your handling code here:
           
//        } catch (PrinterException ex) {
//            Logger.getLogger(payreceipt.class.getName()).log(Level.SEVERE, null, ex);
//        }
         try{
            String dta[]=new String[7];
            dta[0]=cnic.getText();
            dta[1]=cname.getText();
            dta[2]=txtTotal.getText();
            dta[3]=txtDiscount.getText();
            dta[4]=txtNetTotal.getText();
            dta[5]=txtPayment.getText();
            dta[6]=txtBalance.getText();
            LocalDateTime now = LocalDateTime.now();
            if(dta[0].isEmpty()||dta[1].isEmpty()||dta[2].isEmpty()||dta[3].isEmpty()||dta[4].isEmpty()||dta[5].isEmpty() ||dta[6].isEmpty()){
                JOptionPane.showMessageDialog(null, "Details Missing Please Check Again");
            }
            else{
                stmt = conn.createStatement();
                String sql1="INSERT INTO invoice (invoice_no,NIC, CName, total, Discount, NetTotal,Payment,Balance,Date) VALUES('"+ino.getText()+"','"+dta[0]+"', '"+dta[1]+"', '"+dta[2]+"', '"+dta[3]+"', '"+dta[4]+"', '"+dta[5]+"', '"+dta[6]+"', '"+now+"')";
                stmt.executeUpdate(sql1);
                
                 for (int i = 0; i < jTable1.getRowCount(); i++) {
                     String sql2="INSERT INTO invoicedetails (invoice_no,SID,price) VALUES('"+ino.getText()+"', '"+jTable1.getValueAt(i, 1)+"', '"+jTable1.getValueAt(i, 3)+"')";
                    stmt.executeUpdate(sql2);
                 }
                
                JOptionPane.showMessageDialog(null, "Data Inserted Successfully");
                /*for(int i=0;i<5;i++){
                    jTextArea1.append(dta[i]+"/n");
                }*/
                jTextArea1.setText(jTextArea1.getText()+ "***********************************************\n"); 
                jTextArea1.setText(jTextArea1.getText()+ "             Salon Haven                \n"); 
                jTextArea1.setText(jTextArea1.getText()+ "        Gunma ken , Isesaki shi         \n"); 
                jTextArea1.setText(jTextArea1.getText()+ "                Japan                   \n"); 
                jTextArea1.setText(jTextArea1.getText()+ "           +81 70-4561-1480             \n");
                jTextArea1.setText(jTextArea1.getText()+ "************************************************\n"); 
                jTextArea1.append("NIC - "+"\t"+"\t"+dta[0]+"\n");
                jTextArea1.append("CName - "+"\t"+dta[1]+"\n");
                
                 
                 for (int i = 0; i < jTable1.getRowCount(); i++) {
                     jTextArea1.append("Services - "+"\t"+jTable1.getValueAt(i, 1)+"\n");
                     jTextArea1.append("ServiceName - "+"\t"+jTable1.getValueAt(i, 2)+"\n");
                     jTextArea1.append("Price - "+"\t"+jTable1.getValueAt(i, 3)+"\n");
                 }
                
                jTextArea1.append("\t"+"Total - "+"\t"+dta[2]+"\n");
                jTextArea1.append("\t"+"Discount - "+"\t"+dta[3]+"\n");
                jTextArea1.append("\t"+"Net total - "+"\t"+dta[4]+"\n");
                jTextArea1.append("\t"+"Payment - "+"\t"+dta[5]+"\n");
                jTextArea1.append("\t"+"Balance - "+"\t"+dta[6]+"\n");
                jTextArea1.append("\t"+"Time - "+"\t"+"\t"+now+"\n");
                jTextArea1.setText(jTextArea1.getText()+ "************************************************\n"); 
                jTextArea1.setText(jTextArea1.getText()+ "             Thank You!                 \n"); 
                jTextArea1.setText(jTextArea1.getText()+ "             Come Again                 \n"); 
                //delete the entries from appointment
                 DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM,dd,yyyy");
            
                stmt = conn.createStatement();
                String sql = "DELETE FROM appointment WHERE NIC='"+dta[0]+"' AND Date='"+dtf.format(now)+"' ";
               stmt.executeUpdate(sql);
                   JOptionPane.showMessageDialog(null,"Apointment deleted from Appointment");
                   
                         jTextArea1.print();
            }
       
        }
        catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        } catch (PrinterException ex) {
            Logger.getLogger(payreceipt.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    private void cnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnicActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cnicActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:price.requestFocus();
                break;
           case 40:ino.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            ino.requestFocus();
        }
    }//GEN-LAST:event_dateKeyPressed

    private void inoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inoKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:date.requestFocus();
                break;
           case 40:cnic.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            cnic.requestFocus();
        }
    }//GEN-LAST:event_inoKeyPressed

    private void cnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnicKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:ino.requestFocus();
                break;
           case 40:cname.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            cname.requestFocus();
        }
    }//GEN-LAST:event_cnicKeyPressed

    private void cnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnameKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:cnic.requestFocus();
                break;
           case 40:sid.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            sid.requestFocus();
        }
    }//GEN-LAST:event_cnameKeyPressed

    private void sidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sidKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:cname.requestFocus();
                break;
           case 40:sname.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            sname.requestFocus();
        }
    }//GEN-LAST:event_sidKeyPressed

    private void snameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snameKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:sid.requestFocus();
                break;
           case 40:price.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            price.requestFocus();
        }
    }//GEN-LAST:event_snameKeyPressed

    private void priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyPressed
        // TODO add your handling code here:
             switch(evt.getKeyCode())
        {
           case 38:sname.requestFocus();
                break;
           case 40:date.requestFocus();
                break;
        }
           int key=evt.getKeyCode();
            if(key==10){
            date.requestFocus();
        }
    }//GEN-LAST:event_priceKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cnic;
    private javax.swing.JTextField date;
    private javax.swing.JTextField ino;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField price;
    private javax.swing.JButton print;
    private javax.swing.JComboBox<String> sid;
    private javax.swing.JTextField sname;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtNetTotal;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

static public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int colomn) {

            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, colomn);
            setBackground(new Color(102,0,102));
            setForeground(Color.white);
            setFont(new Font("Century Gothic",Font.BOLD,15));

            TableCellRenderer rendererFromHeader = jTable1.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.LEFT);
            return this;
        }
}
}
